{"version":3,"sources":["api.js","Context/ServerDataContextProvider.js","PlayerList/index.js","Header/index.js","App.js","index.js"],"names":["SERVER_HOST","String","process","getPlayers","password","a","payload","_createPayload","fetch","result","json","getServerInfo","body","method","headers","JSON","stringify","undefined","ServerDataContext","React","createContext","children","useState","staticServerInfo","setStaticServerInfo","players","setPlayers","Provider","value","fetchPlayers","setError","api","fetchedPlayers","PlayerList","useContext","error","useInterval","className","length","map","player","index","sessionId","name","car","skin","split","country","target","href","guid","Header","useEffect","fetchedInfo","serverName","ip","port","clients","maxclients","onClick","navigator","clipboard","writeText","App","ReactDOM","render","ServerDataContextProvider","document","getElementById"],"mappings":"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","file":"static/js/main.b51bc681.chunk.js","sourcesContent":["const SERVER_HOST = String(process.env.REACT_APP_SERVER_HOST)\r\n\r\nconst getPlayers = async (password) => {\r\n  const payload = _createPayload({})\r\n  const result = await fetch(`${SERVER_HOST}/api/players`, payload)\r\n  return await result.json()\r\n}\r\n\r\nconst getServerInfo = async () => {\r\n  const payload = _createPayload({})\r\n  const result = await fetch(`${SERVER_HOST}/INFO`, payload)\r\n  return await result.json()\r\n}\r\n\r\nconst _createPayload = ({body, method = 'GET', headers = {'Content-Type': 'application/json'}}) => {\r\n  return {\r\n    method,\r\n    headers,\r\n    body: body ? JSON.stringify(body) : undefined\r\n  }\r\n}\r\n\r\nexport default {\r\n  getPlayers,\r\n  getServerInfo\r\n}","import React, {useState} from 'react'\r\n\r\nexport const ServerDataContext = React.createContext({})\r\n\r\nexport default ({children}) => {\r\n  const [staticServerInfo, setStaticServerInfo] = useState(undefined)\r\n  const [players, setPlayers] = useState(undefined)\r\n\r\n  return <ServerDataContext.Provider value={{\r\n    staticServerInfo, setStaticServerInfo,\r\n    players, setPlayers\r\n  }}>\r\n    {children}\r\n  </ServerDataContext.Provider>\r\n}\r\n","import {useContext, useState} from 'react'\r\nimport api from '../api'\r\nimport {useInterval} from '@restart/hooks'\r\nimport './style.css'\r\nimport {ServerDataContext} from '../Context/ServerDataContextProvider'\r\n\r\nconst fetchPlayers = async (setPlayers, setError) => {\r\n  try {\r\n    const fetchedPlayers = await api.getPlayers()\r\n    setError(undefined)\r\n    setPlayers(fetchedPlayers.players)\r\n  } catch (apiError) {\r\n    setError('An error occurred while trying to fetch the players list')\r\n  }\r\n}\r\n\r\nconst PlayerList = () => {\r\n  const {players, setPlayers} = useContext(ServerDataContext)\r\n  const [error, setError] = useState(undefined)\r\n\r\n  useInterval(\r\n    () => fetchPlayers(setPlayers, setError),\r\n    10000,\r\n    false,\r\n    true\r\n  )\r\n\r\n  if (!!error) return <div className='player-list'>\r\n    <div>{error}</div>\r\n  </div>\r\n\r\n  if (!players || players.length < 1) return <div className='player-list'>\r\n    <div>There currently are no players on the server</div>\r\n  </div>\r\n\r\n  return <div className='player-list'>\r\n    {players.map((player, index) => {\r\n      return <div key={index} className='player-entry'>\r\n        <div className='info'>\r\n          <div>{player.sessionId} - {player.name}</div>\r\n          <div>{player.car}</div>\r\n          <div>{player.skin?.split('/')[0]}</div>\r\n          <div>{player.country}, <a target='_blank' href={`https://steamcommunity.com/profiles/${player.guid}`}>Profile</a></div>\r\n        </div>\r\n        <div className='buttons'>\r\n          <button>Kick</button>\r\n          <button>Ban</button>\r\n          <button>Copy ID</button>\r\n        </div>\r\n      </div>\r\n    })}\r\n  </div>\r\n}\r\n\r\nexport default PlayerList\r\n","import {useContext, useEffect} from 'react'\r\nimport api from '../api'\r\nimport {ServerDataContext} from '../Context/ServerDataContextProvider'\r\nimport './style.css'\r\n\r\nconst Header = () => {\r\n  const {staticServerInfo, setStaticServerInfo} = useContext(ServerDataContext)\r\n\r\n  useEffect(async () => {\r\n    const fetchedInfo = await api.getServerInfo()\r\n    setStaticServerInfo(fetchedInfo)\r\n  }, [])\r\n\r\n  if (!staticServerInfo) return <></>\r\n\r\n  const serverName = staticServerInfo?.name?.split('â„¹')\r\n\r\n  return <div className='header'>\r\n    <div className='header-content'>\r\n      <div>{serverName}</div>\r\n      <div>{staticServerInfo.ip}:{staticServerInfo.port}</div>\r\n      <div>{staticServerInfo.clients} / {staticServerInfo.maxclients}</div>\r\n      <button onClick={() => navigator.clipboard.writeText(`https://acstuff.ru/s/q:race/online/join?ip=${staticServerInfo.ip}&httpPort=${staticServerInfo.port}`)}>Copy Server Link</button>\r\n    </div>\r\n  </div>\r\n}\r\n\r\nexport default Header","import PlayerList from './PlayerList'\nimport './App.css'\nimport Header from './Header'\n\nconst App = () => {\n  return <div className='app'>\n    <Header/>\n    <div>\n      <PlayerList/>\n    </div>\n  </div>\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport ServerDataContextProvider from './Context/ServerDataContextProvider'\n\nReactDOM.render(\n  <ServerDataContextProvider>\n    <App/>\n  </ServerDataContextProvider>,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}